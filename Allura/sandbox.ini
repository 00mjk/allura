#
# allura - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
# This file is for deployment specific config options -- other configuration
# that is always required for the app is done in the config directory, 
# and generally should not be modified by end users. 

[DEFAULT]
debug = true
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
host = 0.0.0.0 
port = 50001

[app:main]
use = egg:Allura
full_stack = true
#lang = ru
cache_dir = %(here)s/data
beaker.session.key = allura
beaker.session.type = cookie
beaker.session.secret = 61ece7db-ba8d-49fe-a923-ab444741708c
beaker.session.validate_key = 714bfe3612c42390726f

auth.method = sfx
auth.login_url = /account/login.php
auth.logout_url = /account/logout.php
auth.sys_session_db_database = SYS_SESSION_DB_DATABASE
auth.sys_session_db_host = SYS_SESSION_DB_HOST
auth.sys_session_db_username = SYS_SESSION_DB_USERNAME
auth.sys_session_db_password = SYS_SESSION_DB_PASSWORD
auth.sys_session_db_pool_recycle = SYS_SESSION_DB_POOL_RECYCLE
auth.sys_session_db_pool_size = SYS_SESSION_DB_POOL_SIZE
auth.sys_session_db_pool_max_overflow = SYS_SESSION_DB_POOL_MAX_OVERFLOW

sfx.site_db.scheme=postgres
sfx.site_db.database = SITE_DB_DATABASE
sfx.site_db.host = SITE_DB_HOST
sfx.site_db.username = SITE_DB_USERNAME
sfx.site_db.password = SITE_DB_PASSWORD
sfx.site_db.pool_recycle = SITE_DB_POOL_RECYCLE
sfx.site_db.pool_size = SITE_DB_POOL_SIZE
sfx.site_db.pool_max_overflow = SITE_DB_MAX_OVERFLOW

sfx.mail_db.scheme=postgres
sfx.mail_db.database = MAIL_DB_DATABASE
sfx.mail_db.host = MAIL_DB_HOST
sfx.mail_db.username = MAIL_DB_USERNAME
sfx.mail_db.password = MAIL_DB_PASSWORD
sfx.mail_db.pool_recycle = MAIL_DB_POOL_RECYCLE
sfx.mail_db.pool_size = MAIL_DB_POOL_SIZE
sfx.mail_db.pool_max_overflow = MAIL_DB_MAX_OVERFLOW

sfx.epic_db.scheme=mysql
sfx.epic_db.database = EPIC_DB_DATABASE
sfx.epic_db.host = EPIC_DB_HOST
sfx.epic_db.username = EPIC_DB_USERNAME
sfx.epic_db.password = EPIC_DB_PASSWORD
sfx.epic_db.pool_recycle = EPIC_DB_POOL_RECYCLE
sfx.epic_db.pool_size = EPIC_DB_POOL_SIZE
sfx.epic_db.pool_max_overflow = EPIC_DB_MAX_OVERFLOW

static_root = /nf/

# Ming setup
ming.main.master = mongo://127.0.0.1:27017/allura

# OEmbed Setup
oembed.config = %(here)s/oembed.ini
oembed.host = oembed.localhost.localdomain:50001

# SOLR setup
solr.server = http://localhost:50065/solr/core0

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions

# pick the form for your database
# %(here) may include a ':' character on Windows environments; this can
# invalidate the URI when specifying a SQLite db via path name
# sqlalchemy.url=postgres://username:password@hostname:port/databasename 
# sqlalchemy.url=mysql://username:password@hostname:port/databasename


# If you have sqlite, here's a simple default to get you started
# in development

sqlalchemy.url = sqlite:///%(here)s/devdata.db
#echo shouldn't be used together with the logging module.
sqlalchemy.echo = false
sqlalchemy.echo_pool = false
sqlalchemy.pool_recycle = 3600

# if you are using Mako and want to be able to reload
# the mako template from disk during the development phase
# you should say 'true' here
# This option is only used for mako templating engine
# WARNING: if you want to deploy your application using a zipped egg
# (ie: if your application's setup.py defines zip-safe=True, then you
# MUST put "false" for the production environment because there will
# be no disk and real files to compare time with.
# On the contrary if your application defines zip-safe=False and is
# deployed in an unzipped manner, then you can leave this option to true
templating.mako.reloadfromdisk = true

# the compiled template dir is a directory that must be readable by your
# webserver. It will be used to store the resulting templates once compiled
# by the TemplateLookup system.
# During development you generally don't need this option since paste's HTTP
# server will have access to you development directories, but in production
# you'll most certainly want to have apache or nginx to write in a directory
# that does not contain any source code in any form for obvious security reasons.
#
#templating.mako.compiled_templates_dir = /some/dir/where/webserver/has/access

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
#set debug = false

[app:tool_test]
use = egg:Allura#tool_test
full_stack = true

cache_dir = %(here)s/data
beaker.session.key = allura
beaker.session.type = cookie
beaker.session.secret = 61ece7db-ba8d-49fe-a923-ab444741708c
beaker.session.validate_key = 714bfe3612c42390726f

# Ming setup
ming.main.master = mongo://127.0.0.1:27017/allura:test

# OEmbed Setup
oembed.config = %(here)s/oembed.ini
oembed.host = oembed.localhost.localdomain:50001

sqlalchemy.url = sqlite:///%(here)s/devdata.db
#echo shouldn't be used together with the logging module.
sqlalchemy.echo = false
sqlalchemy.echo_pool = false
sqlalchemy.pool_recycle = 3600
templating.mako.reloadfromdisk = true

# Logging configuration
# Add additional loggers, handlers, formatters here
# Uses python's logging config file format
# http://docs.python.org/lib/logging-config-fileformat.html

[loggers]
keys = root, allura, sqlalchemy

[handlers]
keys = console

[formatters]
keys = generic

# If you create additional loggers, add them as a key to [loggers]
[logger_root]
level = INFO
handlers = console

[logger_allura]
level = DEBUG
handlers =
qualname = allura

[logger_sqlalchemy]
level = INFO
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)


# If you create additional handlers, add them as a key to [handlers]
[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

# If you create additional formatters, add them as a key to [formatters]
[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
